// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: schema/confirm_file_transfer/confirm_file_transfer.proto

package confirm_file_transfer

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ConfirmFileTransferServiceClient is the client API for ConfirmFileTransferService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ConfirmFileTransferServiceClient interface {
	ConfirmFileTransfer(ctx context.Context, in *ConfirmFileTransferRequest, opts ...grpc.CallOption) (*ConfirmFileTransferResponse, error)
}

type confirmFileTransferServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConfirmFileTransferServiceClient(cc grpc.ClientConnInterface) ConfirmFileTransferServiceClient {
	return &confirmFileTransferServiceClient{cc}
}

func (c *confirmFileTransferServiceClient) ConfirmFileTransfer(ctx context.Context, in *ConfirmFileTransferRequest, opts ...grpc.CallOption) (*ConfirmFileTransferResponse, error) {
	out := new(ConfirmFileTransferResponse)
	err := c.cc.Invoke(ctx, "/confirm_file_transfer.ConfirmFileTransferService/ConfirmFileTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfirmFileTransferServiceServer is the server API for ConfirmFileTransferService service.
// All implementations must embed UnimplementedConfirmFileTransferServiceServer
// for forward compatibility
type ConfirmFileTransferServiceServer interface {
	ConfirmFileTransfer(context.Context, *ConfirmFileTransferRequest) (*ConfirmFileTransferResponse, error)
	mustEmbedUnimplementedConfirmFileTransferServiceServer()
}

// UnimplementedConfirmFileTransferServiceServer must be embedded to have forward compatible implementations.
type UnimplementedConfirmFileTransferServiceServer struct {
}

func (UnimplementedConfirmFileTransferServiceServer) ConfirmFileTransfer(context.Context, *ConfirmFileTransferRequest) (*ConfirmFileTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmFileTransfer not implemented")
}
func (UnimplementedConfirmFileTransferServiceServer) mustEmbedUnimplementedConfirmFileTransferServiceServer() {
}

// UnsafeConfirmFileTransferServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ConfirmFileTransferServiceServer will
// result in compilation errors.
type UnsafeConfirmFileTransferServiceServer interface {
	mustEmbedUnimplementedConfirmFileTransferServiceServer()
}

func RegisterConfirmFileTransferServiceServer(s grpc.ServiceRegistrar, srv ConfirmFileTransferServiceServer) {
	s.RegisterService(&ConfirmFileTransferService_ServiceDesc, srv)
}

func _ConfirmFileTransferService_ConfirmFileTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmFileTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfirmFileTransferServiceServer).ConfirmFileTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confirm_file_transfer.ConfirmFileTransferService/ConfirmFileTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfirmFileTransferServiceServer).ConfirmFileTransfer(ctx, req.(*ConfirmFileTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ConfirmFileTransferService_ServiceDesc is the grpc.ServiceDesc for ConfirmFileTransferService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ConfirmFileTransferService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "confirm_file_transfer.ConfirmFileTransferService",
	HandlerType: (*ConfirmFileTransferServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfirmFileTransfer",
			Handler:    _ConfirmFileTransferService_ConfirmFileTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schema/confirm_file_transfer/confirm_file_transfer.proto",
}
